{"version":3,"sources":["components/hero.js","components/comp1.js","components/navbar.js","components/layout.js","components/projects.js","utils/observer.js","components/contact.js","App.js","serviceWorker.js","index.js"],"names":["Hero","useState","items","setItems","started","setStarted","transitions","useTransition","from","opacity","height","innerHeight","transform","color","enter","leave","update","props","useSpring","to","reset","setTimeout","useEffect","setInterval","clearInterval","clearTimeout","className","div","style","map","item","rest","key","overflow","Comp1","marginTop","id","classNames","require","Navbar","condensed","condensedClass","href","Layout","setCondensed","containerRef","useRef","handleScroll","scrollTop","current","addEventListener","removeEventListener","ref","children","Projects","noop","Contact","shouldShow","setShouldShow","elRef","currentRef","positionObserver","element","onIntersect","onDeIntersect","rootMargin","shouldDetachOnIntersect","observer","IntersectionObserver","entries","find","entry","isIntersecting","unobserve","createObserver","console","log","observe","target","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b7922a1f.chunk.js","sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport {animated, useSpring, useTransition} from \"react-spring\";\nimport './comp1.scss';\n\n\nexport const Hero = () => {\n    const [items, setItems] = useState([]);\n    const [started, setStarted] = useState(false);\n    const transitions = useTransition(items, null, {\n        from: { opacity: 0, height: 0, innerHeight: 0, transform: 'perspective(600px) rotateX(0deg)', color: 'black' },\n        enter: [\n            { opacity: 1, height: 80, innerHeight: 80 },\n            { transform: 'perspective(600px) rotateX(180deg)', color: 'white' },\n            { transform: 'perspective(600px) rotateX(0deg)', color: '#353434'  },\n        ],\n        leave: [{ color: '#9bc0fa' }, { innerHeight: 0 }, { opacity: 0, height: 0 }],\n        update: [\n            { opacity: 1, height: 80, innerHeight: 80 },\n            { transform: 'perspective(600px) rotateX(180deg)', color: 'white' },\n            { transform: 'perspective(600px) rotateX(0deg)', color: '#353434'  },\n        ],\n    });\n\n    const props = useSpring({\n        from: { opacity: 0, height: 0, innerHeight: 0, color: '#8fa5b6' },\n        to: { opacity: 1, height: 80, innerHeight: 80, color: '#F4edea' }\n    })\n\n    const reset = () => {\n        setTimeout(() => setItems(['Designer']), 2000);\n        setTimeout(() => setItems([]), 5000);\n        setTimeout(() => setItems(['Developer']), 8000);\n        setTimeout(() => setItems([]), 11000);\n    };\n\n    useEffect(() => {\n        reset();\n        if (!started)\n            setInterval(() => {\n                setStarted(true);\n                setItems([]);\n                reset();\n        }, 13000);\n        return () => {\n            setItems([]);\n            clearInterval();\n            clearTimeout();\n        };\n    }, []);\n\n    return (\n        <div className='comp1'>\n            <div>\n                <animated.div className=\"transitions-item\" style={props}>\n                    Katy\n                </animated.div>\n                {transitions.map(({ item, props: { innerHeight, ...rest }, key }) => (\n                    <animated.div className=\"transitions-item\" key={key} style={rest}>\n                        <animated.div style={{ overflow: 'hidden', height: innerHeight }}>{item}</animated.div>\n                    </animated.div>\n                ))}\n                <animated.div className=\"transitions-item\" style={props}>\n                    Feng\n                </animated.div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport {Spring} from \"react-spring/renderprops-universal\";\nimport {useSpring, animated} from \"react-spring\";\nimport './comp1.scss';\nimport {Hero} from \"./hero\";\n\nexport const Comp1 = () => {\n    const props = useSpring({opacity: 1, marginTop: 0, from: {opacity: 0, marginTop: -500}});\n\n    return (\n        <div id='about' className='section main'>\n            <Hero />\n            <div className='comp2'>\n                <div className='comp2--content'>\n                    <animated.div style={props}>\n                        I'm a front-end developer based in NYC with a background in art & design.\n                    </animated.div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport shortid from \"shortid\";\nimport '../navbar.scss';\n\nconst classNames = require('classnames');\n\nconst Navbar = ({condensed}) => {\n    const condensedClass = classNames({\n        'condensed': condensed\n    })\n    const getId = () => {\n        const id = shortid.generate();\n        return id;\n    };\n\n    return (\n        <nav className={`navbar ${condensedClass}`}>\n            <ul className={`navbar--list ${condensedClass}`}>\n                <li className='navbar--listitem'>\n                    <a href='#about' className='navbar--link'>About</a>\n                </li>\n                <li className='navbar--listitem'>\n                    <a href='#projects' className='navbar--link'>Projects</a>\n                </li>\n                <li className='navbar--listitem'>\n                    <a href='#contact' className='navbar--link'>Contact</a>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navbar;","import React, {useState, useEffect, useRef} from \"react\";\nimport Navbar from \"../components/navbar\";\n\nconst Layout = (props) => {\n    const [condensed, setCondensed] = useState(false);\n    const containerRef = useRef();\n    const scrollThreshold = 1;\n\n    const handleScroll = () => {\n        const scrollTop = containerRef.current.scrollTop;\n        if (scrollTop >= scrollThreshold) {\n            setCondensed(true);\n        } else {\n            setCondensed(false);\n        }\n    }\n\n    useEffect( () => {\n        containerRef.current.addEventListener('scroll', handleScroll);\n\n        return () => containerRef.current.removeEventListener('scroll', handleScroll);\n    }, []);\n\n    return (\n        <div>\n            <Navbar\n                condensed={condensed}\n            />\n            <div className='container' ref={containerRef}>\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\nexport default Layout;","import React from \"react\";\nimport { IoMdBuild } from 'react-icons/io';\nimport './comp1.scss';\n\nexport const Projects = () => {\n\n    return (\n        <div id='projects' className='section projects'>\n            <div className='projects--container'>\n                <IoMdBuild />\n                <div className=''>In progress... check back soon</div>\n            </div>\n        </div>\n    )\n}","const noop = () => {};\n\nexport const createObserver = (element, {onIntersect = noop, onDeIntersect = noop, rootMargin = '0px', shouldDetachOnIntersect = false}) => {\n    const observer = new IntersectionObserver(\n        (entries) => {\n            const intersectingEntry = entries.find((entry) => entry.isIntersecting);\n\n            if (intersectingEntry) {\n                onIntersect();\n                if (shouldDetachOnIntersect) {\n                    observer.unobserve(element);\n                }\n            } else {\n                onDeIntersect();\n            }\n        },\n        {rootMargin}\n    );\n    return observer;\n};\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {createObserver} from \"../utils/observer\";\nimport {animated, useSpring} from \"react-spring\";\n\nimport { IoIosAt, IoLogoLinkedin} from 'react-icons/io';\nimport './comp1.scss';\nimport './contact.scss';\n\n\nexport const Contact = () => {\n    const [shouldShow, setShouldShow] = useState(false);\n    const elRef = useRef(null);\n    const props = useSpring({opacity: 1, marginTop: 0, from: {opacity: 0, marginTop: -500}});\n\n    useEffect(() => {\n        const currentRef = elRef.current;\n        const positionObserver = createObserver(elRef.current, {\n            onIntersect: () => {\n                setShouldShow(true);\n                console.log('instersect');\n            },\n            onDeIntersect: () => {\n                setShouldShow(false);\n                console.log('DEinstersect');\n            },\n            rootMargin: '-50px',\n            shouldDetachOnIntersect: false\n        });\n        positionObserver.observe(elRef.current);\n        return () => {\n            positionObserver.unobserve(currentRef);\n        };}, []\n    );\n\n    return (\n        <div id='contact' className='section contact' ref={elRef}>\n            <div className='contact--block'>\n                <div className='contact--title'>\n                    {shouldShow &&\n                    <animated.div className='transition-item' style={props}>\n                        Get In Touch\n                    </animated.div>\n                    }\n                    <div className={`contact--underline ${shouldShow}`}></div>\n                </div>\n\n                <div className='contact--icons'>\n                    <div className='contact--email'>\n                        <IoIosAt />\n                        <div className='contact--address'>katy.feng.14@gmail.com</div>\n                    </div>\n                    <a className='contact--link linkedin' href='http://linkedin.com/in/katyfeng' target='_blank'><IoLogoLinkedin /></a>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport {Comp1} from './components/comp1';\nimport Layout from \"./components/layout\";\nimport {Projects} from \"./components/projects\";\nimport {Contact} from \"./components/contact\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Comp1/>\n      <Projects/>\n      <Contact/>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}